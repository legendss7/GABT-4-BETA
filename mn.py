import streamlit as st
import pandas as pd
import numpy as np
import base64

# --- CONFIGURACI√ìN E INICIALIZACI√ìN ---
st.set_page_config(layout="wide", page_title="Bater√≠a de Aptitudes GATB Profesional")

# Mapeo de Aptitudes y Colores para el display
APTITUDES_MAP = {
    "Razonamiento General": {"code": "G", "color": "orange"},
    "Razonamiento Verbal": {"code": "V", "color": "blue"},
    "Razonamiento Num√©rico": {"code": "N", "color": "green"},
    "Razonamiento Espacial": {"code": "S", "color": "red"},
    "Velocidad Perceptiva": {"code": "P", "color": "purple"},
    "Precisi√≥n Manual": {"code": "Q", "color": "cyan"},
    "Coordinaci√≥n Manual": {"code": "K", "color": "magenta"},
    "Atenci√≥n Concentrada": {"code": "A", "color": "lime"},
    "Razonamiento Mec√°nico": {"code": "M", "color": "teal"},
    "Razonamiento Abstracto": {"code": "R", "color": "yellow"},
    "Razonamiento Clerical": {"code": "C", "color": "pink"},
    "Razonamiento T√©cnico": {"code": "T", "color": "brown"},
}
AREAS = list(APTITUDES_MAP.keys())
N_PREGUNTAS_POR_AREA = 12

# Sistema de Clasificaci√≥n por Percentil (SIMULADO)
def clasificar_percentil(porcentaje):
    """Convierte el porcentaje de acierto en un percentil simulado y clasificaci√≥n."""
    if porcentaje >= 90:
        return 96, "Superior (90-99)"
    elif porcentaje >= 80:
        return 88, "Alto (80-89)"
    elif porcentaje >= 60:
        return 70, "Promedio Alto (60-79)"
    elif porcentaje >= 40:
        return 50, "Promedio (40-59)"
    elif porcentaje >= 20:
        return 30, "Promedio Bajo (20-39)"
    elif porcentaje >= 10:
        return 15, "Bajo (10-19)"
    else:
        return 5, "Muy Bajo (0-9)"

# Funci√≥n para la Calificaci√≥n Global
def calificar_global(avg_percentil):
    """Asigna una calificaci√≥n general al perfil basado en el percentil promedio."""
    if avg_percentil >= 85:
        return "Potencial Ejecutivo üåü", "El perfil indica un potencial excepcionalmente alto y equilibrado para roles directivos, estrat√©gicos y de alta complejidad. Capacidad de aprendizaje superior y adaptaci√≥n r√°pida a cualquier entorno.", "#008000" # Green
    elif avg_percentil >= 65:
        return "Nivel Profesional Avanzado üèÜ", "El perfil es s√≥lido, con fortalezas claras y un buen balance aptitudinal. Excelente para roles t√©cnicos especializados, de gesti√≥n de proyectos y consultor√≠a.", "#4682b4" # Steel Blue
    elif avg_percentil >= 40:
        return "Perfil Competitivo üíº", "El perfil se sit√∫a en el promedio superior, demostrando suficiencia en todas las √°reas. Apto para la mayor√≠a de roles operativos y de coordinaci√≥n. Requiere enfoque en el desarrollo de fortalezas clave.", "#ff8c00" # Dark Orange
    else:
        return "Per√≠odo de Desarrollo üõ†Ô∏è", "El perfil requiere un per√≠odo de enfoque intensivo en el desarrollo de aptitudes clave. Se recomienda comenzar con roles de soporte y entrenamiento continuo.", "#dc143c" # Crimson

# Funci√≥n para forzar el scroll al inicio de la p√°gina (Soluci√≥n agresiva)
def js_scroll_to_top():
    """Injecta JS para forzar el scroll al inicio de la p√°gina."""
    # Apunta al elemento principal de Streamlit para garantizar que el scroll funcione.
    js_code = """
    <script>
        try {
            const mainContainer = window.parent.document.querySelector('.main');
            if (mainContainer) {
                mainContainer.scrollTop = 0;
            } else {
                document.documentElement.scrollTop = 0;
                document.body.scrollTop = 0;
            }
        } catch (e) {
            console.error("No se pudo forzar el scroll:", e);
        }
    </script>
    """
    st.html(js_code)


# --- 2. DEFINICI√ìN DEL TEST (144 Items √önicos, sin Copyright) ---

PREGUNTAS_GATB = []
current_id = 1

for area, data in APTITUDES_MAP.items():
    code = data['code']
    
    for i in range(1, N_PREGUNTAS_POR_AREA + 1):
        pregunta = f"[{code}-{i}] "
        opciones = {"a": "Opci√≥n A", "b": "Opci√≥n B", "c": "Opci√≥n C", "d": "Opci√≥n D"}
        respuesta = "c" # Respuesta por defecto

        # --- PREGUNTAS √öNICAS Y DESCRIPTIVAS (12 √≠tems por √°rea) ---
        if code == "G": # Razonamiento General
            if i == 1: pregunta = "Selecciona el par de conceptos que mantienen la misma relaci√≥n: HACHA es a MADERA como CINCEL es a..." ; opciones = {"a": "Pintura", "b": "Metal", "c": "Escultura", "d": "Papel"} ; respuesta = "c"
            elif i == 2: pregunta = "La secuencia num√©rica es: 5, 8, 13, 20, ¬øCu√°l es el siguiente n√∫mero?" ; opciones = {"a": "27", "b": "29", "c": "31", "d": "33"} ; respuesta = "b" # +3, +5, +7, +9
            elif i == 3: pregunta = "Si todos los Z son Y, y algunos X son Z, ¬øqu√© se puede concluir con certeza?" ; opciones = {"a": "Todos los Y son X", "b": "Algunos X son Y", "c": "Ning√∫n Y es X", "d": "Todos los X son Z"} ; respuesta = "b"
            elif i == 4: pregunta = "Encuentre la palabra que sobra: Mercurio, Saturno, J√∫piter, Cometa, Marte." ; opciones = {"a": "Mercurio", "b": "Saturno", "c": "J√∫piter", "d": "Cometa"} ; respuesta = "d"
            elif i == 5: pregunta = "Si 3 gatos atrapan 3 ratones en 3 minutos, ¬øcu√°ntos gatos atrapar√≠an 10 ratones en 10 minutos?" ; opciones = {"a": "3", "b": "5", "c": "10", "d": "30"} ; respuesta = "a"
            elif i == 6: pregunta = "Analog√≠a: CUERPO es a C√âLULA como ESTADO es a..." ; opciones = {"a": "Leyes", "b": "Poder", "c": "Ciudadano", "d": "Gobierno"} ; respuesta = "c"
            elif i == 7: pregunta = "Serie de letras: A, C, F, J, ¬øQu√© letra sigue?" ; opciones = {"a": "L", "b": "M", "c": "N", "d": "O"} ; respuesta = "d" # +2, +3, +4, +5
            elif i == 8: pregunta = "Si la afirmaci√≥n 'Hoy llueve O hace sol' es verdadera, y hoy NO llueve. ¬øQu√© se concluye?" ; opciones = {"a": "No hace sol", "b": "La afirmaci√≥n es falsa", "c": "Hace sol", "d": "Llover√° ma√±ana"} ; respuesta = "c"
            elif i == 9: pregunta = "El 8% de 500 es igual al 40% de qu√© n√∫mero?" ; opciones = {"a": "100", "b": "150", "c": "200", "d": "400"} ; respuesta = "a"
            elif i == 10: pregunta = "Identifica el concepto m√°s general: Mesa, Silla, Mueble, Sof√°." ; opciones = {"a": "Mesa", "b": "Silla", "c": "Mueble", "d": "Sof√°"} ; respuesta = "c"
            elif i == 11: pregunta = "Un reloj se adelanta 1 minuto cada hora. Si se ajusta a las 12:00 PM, ¬øqu√© hora marcar√° a las 3:00 PM?" ; opciones = {"a": "3:00", "b": "3:03", "c": "3:01", "d": "3:04"} ; respuesta = "b"
            elif i == 12: pregunta = "Completa la serie: 1/2, 1/4, 1/8, ¬øCu√°l sigue?" ; opciones = {"a": "1/10", "b": "1/12", "c": "1/16", "d": "1/32"} ; respuesta = "c"

        elif code == "V": # Razonamiento Verbal (Vocabulario, Comprensi√≥n, Sin√≥nimos/Ant√≥nimos)
            if i == 1: pregunta = "Sin√≥nimo de 'EF√çMERO'." ; opciones = {"a": "Duradero", "b": "Fugaz", "c": "Eterno", "d": "Grande"} ; respuesta = "b"
            elif i == 2: pregunta = "Ant√≥nimo de 'BELIGERANTE'." ; opciones = {"a": "Guerrero", "b": "Pac√≠fico", "c": "Hostil", "d": "Fuerte"} ; respuesta = "b"
            elif i == 3: pregunta = "El t√©rmino 'IDIOSINCRASIA' se refiere a:" ; opciones = {"a": "Una enfermedad rara", "b": "El temperamento distintivo de un grupo", "c": "Un tipo de gobierno", "d": "Una f√≥rmula qu√≠mica"} ; respuesta = "b"
            elif i == 4: pregunta = "Complete: La ________ del artista fue evidente en la sutileza de su obra." ; opciones = {"a": "Pereza", "b": "Torpeza", "c": "Maestr√≠a", "d": "Ruptura"} ; respuesta = "c"
            elif i == 5: pregunta = "Sin√≥nimo de 'PALPABLE'." ; opciones = {"a": "Invisible", "b": "Intangible", "c": "Evidente", "d": "Suave"} ; respuesta = "c"
            elif i == 6: pregunta = "Ant√≥nimo de 'DISPENSA'." ; opciones = {"a": "Permiso", "b": "Prohibici√≥n", "c": "Obligaci√≥n", "d": "Concesi√≥n"} ; respuesta = "c"
            elif i == 7: pregunta = "La palabra 'OBSEQUIO' tiene el mismo significado que:" ; opciones = {"a": "Castigo", "b": "Regalo", "c": "Deuda", "d": "Retorno"} ; respuesta = "b"
            elif i == 8: pregunta = "El significado de 'PROSCRIBIR' es:" ; opciones = {"a": "Aceptar", "b": "Permitir", "c": "Prohibir o desterrar", "d": "Escribir mucho"} ; respuesta = "c"
            elif i == 9: pregunta = "Identifique la palabra mal escrita:" ; opciones = {"a": "Exhibici√≥n", "b": "Exuberante", "c": "Exajerar", "d": "Expirar"} ; respuesta = "c"
            elif i == 10: pregunta = "Sin√≥nimo de 'ALTRUISTA'." ; opciones = {"a": "Ego√≠sta", "b": "Generoso", "c": "Amargado", "d": "Solitario"} ; respuesta = "b"
            elif i == 11: pregunta = "Complete: El historiador tuvo que ________ los hechos para encontrar la verdad." ; opciones = {"a": "Imaginar", "b": "Cuestionar", "c": "Alterar", "d": "Omitir"} ; respuesta = "b"
            elif i == 12: pregunta = "Ant√≥nimo de 'SUTILEZA'." ; opciones = {"a": "Delicadeza", "b": "Aspereza", "c": "Amabilidad", "d": "Claridad"} ; respuesta = "b"

        elif code == "N": # Razonamiento Num√©rico (C√°lculo r√°pido, problemas aritm√©ticos)
            if i == 1: pregunta = "Resuelva: $72 \div 9 + 4 \times 3 - 10$." ; opciones = {"a": "6", "b": "10", "c": "12", "d": "14"} ; respuesta = "b"
            elif i == 2: pregunta = "Un tren viaja a 60 km/h. ¬øCu√°ntos kil√≥metros recorrer√° en 2 horas y 30 minutos?" ; opciones = {"a": "120 km", "b": "150 km", "c": "180 km", "d": "200 km"} ; respuesta = "b"
            elif i == 3: pregunta = "Calcule el 15% de 300." ; opciones = {"a": "30", "b": "35", "c": "45", "d": "50"} ; respuesta = "c"
            elif i == 4: pregunta = "Resuelva: $(9 + 3) \times 2 - (15 \div 3)$." ; opciones = {"a": "19", "b": "24", "c": "28", "d": "31"} ; respuesta = "a"
            elif i == 5: pregunta = "Si $x + 5 = 12$, entonces $2x - 1$ es igual a:" ; opciones = {"a": "13", "b": "14", "c": "15", "d": "16"} ; respuesta = "a"
            elif i == 6: pregunta = "Si una camisa cuesta $80 y tiene un 25% de descuento, ¬øcu√°l es el precio final?" ; opciones = {"a": "$55", "b": "$60", "c": "$65", "d": "$70"} ; respuesta = "b"
            elif i == 7: pregunta = "Serie: 2, 4, 8, 16, ¬øCu√°l sigue?" ; opciones = {"a": "20", "b": "24", "c": "32", "d": "64"} ; respuesta = "c"
            elif i == 8: pregunta = "Calcule $\frac{2}{3} + \frac{1}{6}$." ; opciones = {"a": "1/2", "b": "3/4", "c": "5/6", "d": "1"} ; respuesta = "c"
            elif i == 9: pregunta = "Si el √°rea de un cuadrado es 64 $m^2$, ¬øcu√°l es su per√≠metro?" ; opciones = {"a": "8 m", "b": "16 m", "c": "32 m", "d": "64 m"} ; respuesta = "c"
            elif i == 10: pregunta = "Resuelva: $0.75 + 1.25 + 0.5$." ; opciones = {"a": "2.0", "b": "2.5", "c": "2.75", "d": "3.0"} ; respuesta = "b"
            elif i == 11: pregunta = "Un vendedor gan√≥ $150 de comisi√≥n, lo que representa el 5% de sus ventas. ¬øCu√°nto vendi√≥?" ; opciones = {"a": "$3000", "b": "$2500", "c": "$1500", "d": "$5000"} ; respuesta = "a"
            elif i == 12: pregunta = "Calcule el promedio de 10, 20, y 30." ; opciones = {"a": "15", "b": "20", "c": "25", "d": "60"} ; respuesta = "b"

        elif code == "S": # Razonamiento Espacial (Visualizaci√≥n de formas y rotaciones)
            if i == 1: pregunta = "Imagine una 'L' may√∫scula rotada 90 grados en sentido antihorario. ¬øC√≥mo se ver√≠a?" ; opciones = {"a": "Una 'L' normal", "b": "Una 'L' de cabeza", "c": "Una 'J'", "d": "Un √°ngulo recto en la parte inferior izquierda"} ; respuesta = "d"
            elif i == 2: pregunta = "Si dobla una plantilla con 5 cuadrados en forma de cruz, ¬øqu√© forma geom√©trica tridimensional se obtiene?" ; opciones = {"a": "Pir√°mide", "b": "Cono", "c": "Cubo", "d": "Cilindro"} ; respuesta = "c"
            elif i == 3: pregunta = "Si un objeto cil√≠ndrico es cortado transversalmente, ¬øqu√© figura bidimensional resulta en el corte?" ; opciones = {"a": "Tri√°ngulo", "b": "Rect√°ngulo", "c": "C√≠rculo", "d": "Trapezoide"} ; respuesta = "c"
            elif i == 4: pregunta = "Observe un reloj. Si el minutero est√° en el 12 y el horario en el 3, ¬øcu√°l es el √°ngulo menor entre ellos?" ; opciones = {"a": "60¬∞", "b": "90¬∞", "c": "120¬∞", "d": "180¬∞"} ; respuesta = "b"
            elif i == 5: pregunta = "Si se reflejara la letra 'B' en un espejo, ¬øcu√°l de las opciones mostrar√≠a la imagen invertida?" ; opciones = {"a": "B", "b": "A", "c": "E", "d": "Su imagen reflejada"} ; respuesta = "d"
            elif i == 6: pregunta = "Si apila 3 cubos y los pinta de rojo, ¬øcu√°ntas caras internas no pintadas hay?" ; opciones = {"a": "2", "b": "4", "c": "6", "d": "8"} ; respuesta = "b"
            elif i == 7: pregunta = "En un plano de planta (vista superior), ¬øqu√© representa mejor una puerta en un pasillo?" ; opciones = {"a": "Un c√≠rculo", "b": "Una l√≠nea recta", "c": "Un arco", "d": "Un rect√°ngulo s√≥lido"} ; respuesta = "c"
            elif i == 8: pregunta = "Si un tri√°ngulo equil√°tero gira 180 grados, ¬øsu orientaci√≥n visual cambia?" ; opciones = {"a": "S√≠", "b": "No", "c": "Depende del eje", "d": "Solo si es is√≥sceles"} ; respuesta = "b"
            elif i == 9: pregunta = "Si un prisma rectangular tiene 6 caras, 12 aristas y 8 v√©rtices. ¬øCu√°ntas aristas tiene un cubo?" ; opciones = {"a": "6", "b": "8", "c": "10", "d": "12"} ; respuesta = "d"
            elif i == 10: pregunta = "Si un mapa est√° orientado al Norte, y caminas hacia el Oeste. ¬øHacia d√≥nde est√° tu sombra al mediod√≠a (hemisferio norte)?" ; opciones = {"a": "Norte", "b": "Este", "c": "Oeste", "d": "Sur"} ; respuesta = "b"
            elif i == 11: pregunta = "Visualice una estrella de 5 puntas. Si traza una l√≠nea desde el centro a una de las puntas, ¬øcu√°ntos tri√°ngulos equil√°teros se forman?" ; opciones = {"a": "0", "b": "5", "c": "10", "d": "20"} ; respuesta = "b"
            elif i == 12: pregunta = "Si cortamos una esfera exactamente por la mitad, ¬øqu√© forma tiene la superficie de corte?" ; opciones = {"a": "Elipse", "b": "Cuadrado", "c": "C√≠rculo", "d": "Semisfera"} ; respuesta = "c"

        elif code == "P": # Velocidad Perceptiva (Comparaci√≥n de detalles bajo velocidad)
            if i == 1: pregunta = "Identifique cu√°l par es ID√âNTICO: (A) 5920-A / 5920-A, (B) 6074-Z / 6072-Z, (C) MNT-11 / MTT-11." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Ninguno"} ; respuesta = "a"
            elif i == 2: pregunta = "Identifique cu√°l par es DIFERENTE: (A) LIMA-02 / LIMA-02, (B) BOGOTA-15 / BOGOTA-15, (C) PARIS-99 / PARID-99." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Todos id√©nticos"} ; respuesta = "c"
            elif i == 3: pregunta = "Compara en menos de 5 segundos. ¬øCu√°l par coincide?: (A) G4H2P / G4H2Q, (B) S8T9W / S8T9W, (C) 123X4 / 123Y4." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Ninguno"} ; respuesta = "b"
            elif i == 4: pregunta = "Identifique cu√°l par es ID√âNTICO: (A) J-11234 / J-11243, (B) K-5000 / K-5000, (C) L-7890 / L-789." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Ninguno"} ; respuesta = "b"
            elif i == 5: pregunta = "Identifique cu√°l par es DIFERENTE: (A) CODES-A / CODES-A, (B) DATOS-B / DATA-B, (C) LOGICA-C / LOGICA-C." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Todos id√©nticos"} ; respuesta = "b"
            elif i == 6: pregunta = "Identifique cu√°l par es ID√âNTICO: (A) XYZ-987 / YXZ-987, (B) ABC-123 / ABC-123, (C) DEF-456 / DF-456." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Ninguno"} ; respuesta = "b"
            elif i == 7: pregunta = "Identifique cu√°l par es DIFERENTE: (A) PROYECTO / PROYECTO, (B) EJECUTIVO / EJECUTIVO, (C) GERENCIA / GERANCIA." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Todos id√©nticos"} ; respuesta = "c"
            elif i == 8: pregunta = "Compara: 12456-A / 12456-B." ; opciones = {"a": "Id√©nticos", "b": "Diferentes"} ; respuesta = "b"
            elif i == 9: pregunta = "Compara: Z99-T-50 / Z99-T-50." ; opciones = {"a": "Id√©nticos", "b": "Diferentes"} ; respuesta = "a"
            elif i == 10: pregunta = "Compara: P300-X / P300-Y." ; opciones = {"a": "Id√©nticos", "b": "Diferentes"} ; respuesta = "b"
            elif i == 11: pregunta = "Compara: CABLE-R45 / CABLE-R45." ; opciones = {"a": "Id√©nticos", "b": "Diferentes"} ; respuesta = "a"
            elif i == 12: pregunta = "Compara: $789.00 / $798.00." ; opciones = {"a": "Id√©nticos", "b": "Diferentes"} ; respuesta = "b"

        elif code == "Q": # Precisi√≥n Manual (Destreza fina y manipulaci√≥n) - Preguntas Te√≥ricas
             if i == 1: pregunta = "Si tuviera que insertar un chip diminuto en una placa electr√≥nica, ¬øqu√© tipo de control muscular ser√≠a esencial?" ; opciones = {"a": "Control grueso del brazo", "b": "Control fino de los dedos y la mu√±eca", "c": "Fuerza de agarre", "d": "Rapidez general"} ; respuesta = "b"
             elif i == 2: pregunta = "La Precisi√≥n Manual se asocia directamente con la habilidad de:" ; opciones = {"a": "Correr r√°pido", "b": "Manipular instrumentos delicados", "c": "Cargar objetos pesados", "d": "Mantener el equilibrio"} ; respuesta = "b"
             elif i == 3: pregunta = "¬øQu√© acci√≥n requiere el mayor grado de destreza manual fina?" ; opciones = {"a": "Escribir en una pizarra", "b": "Usar un destornillador grande", "c": "Realizar una sutura quir√∫rgica", "d": "Lanzar una pelota"} ; respuesta = "c"
             elif i == 4: pregunta = "En un trabajo de ensamblaje de joyer√≠a, una alta puntuaci√≥n en Q sugiere que el individuo es:" ; opciones = {"a": "Fuerte", "b": "R√°pido mentalmente", "c": "H√°bil con piezas peque√±as", "d": "Sociable"} ; respuesta = "c"
             elif i == 5: pregunta = "El movimiento de la mano al dibujar un c√≠rculo de un cent√≠metro de di√°metro eval√∫a principalmente:" ; opciones = {"a": "Coordinaci√≥n", "b": "Precisi√≥n", "c": "Velocidad", "d": "Resistencia"} ; respuesta = "b"
             elif i == 6: pregunta = "¬øCu√°l es un buen sustituto te√≥rico para una tarea que requiere alta precisi√≥n manual?" ; opciones = {"a": "Tiro con arco", "b": "Mecanograf√≠a veloz", "c": "Talla de madera", "d": "Jugar f√∫tbol"} ; respuesta = "c"
             elif i == 7: pregunta = "Un factor que NO impacta negativamente la precisi√≥n manual es:" ; opciones = {"a": "Temblor", "b": "Fatiga", "c": "El conocimiento del objetivo", "d": "Ansiedad"} ; respuesta = "c"
             elif i == 8: pregunta = "La aptitud Q se relaciona fuertemente con carreras como:" ; opciones = {"a": "Contador", "b": "Odont√≥logo", "c": "Abogado", "d": "Vendedor"} ; respuesta = "b"
             elif i == 9: pregunta = "La habilidad de Q se eval√∫a midiendo la rapidez y la _________ para manipular objetos peque√±os." ; opciones = {"a": "Imaginaci√≥n", "b": "Fuerza", "c": "Exactitud", "d": "Simpat√≠a"} ; respuesta = "c"
             elif i == 10: pregunta = "¬øQu√© profesi√≥n requiere mayor Precisi√≥n Manual, m√°s que fuerza?" ; opciones = {"a": "Alba√±il", "b": "Mec√°nico", "c": "Relojero", "d": "Soldador"} ; respuesta = "c"
             elif i == 11: pregunta = "El test de Precisi√≥n Manual usualmente involucra:" ; opciones = {"a": "Levantar pesas", "b": "Insertar clavijas o alfileres en orificios", "c": "Resolver ecuaciones", "d": "Leer planos"} ; respuesta = "b"
             elif i == 12: pregunta = "En la manipulaci√≥n de pinzas finas, la aptitud Q es crucial para evitar:" ; opciones = {"a": "Errores de c√°lculo", "b": "Da√±o al material", "c": "Decisiones equivocadas", "d": "El aburrimiento"} ; respuesta = "b"
        
        elif code == "K": # Coordinaci√≥n Manual (Coordinaci√≥n ojo-mano) - Preguntas Te√≥ricas
             if i == 1: pregunta = "La aptitud K (Coordinaci√≥n) es esencial para la actividad de:" ; opciones = {"a": "Memorizar textos", "b": "Conducir un veh√≠culo", "c": "Escribir un ensayo", "d": "Hacer un presupuesto"} ; respuesta = "b"
             elif i == 2: pregunta = "La coordinaci√≥n ojo-mano se pone a prueba al:" ; opciones = {"a": "Escuchar m√∫sica", "b": "Tirar una pelota a un blanco", "c": "Contar dinero", "d": "Estar quieto"} ; respuesta = "b"
             elif i == 3: pregunta = "¬øQu√© tipo de trabajo requiere m√°s la Coordinaci√≥n Manual que la Precisi√≥n Manual?" ; opciones = {"a": "Engarzar joyas", "b": "Uso de un taladro de columna", "c": "Cirug√≠a ocular", "d": "Mecanograf√≠a r√°pida"} ; respuesta = "b"
             elif i == 4: pregunta = "El factor K mide la habilidad para hacer que la mano o el brazo sigan los dictados del:" ; opciones = {"a": "O√≠do", "b": "Codo", "c": "Ojo", "d": "Pie"} ; respuesta = "c"
             elif i == 5: pregunta = "En el deporte del tenis, la aptitud K es fundamental para:" ; opciones = {"a": "La resistencia f√≠sica", "b": "El saque y el golpeo de la pelota", "c": "La estrategia mental", "d": "La elecci√≥n del equipo"} ; respuesta = "b"
             elif i == 6: pregunta = "¬øCu√°l es el componente clave de la Coordinaci√≥n Manual?" ; opciones = {"a": "Fuerza muscular", "b": "Integraci√≥n sensorial", "c": "Memoria espacial", "d": "Velocidad de lectura"} ; respuesta = "b"
             elif i == 7: pregunta = "El factor K se utiliza para predecir el √©xito en tareas que requieren movimientos:" ; opciones = {"a": "Estacionarios y repetitivos", "b": "R√°pidos y guiados por la vista", "c": "Lentos y pesados", "d": "Absolutos y fijos"} ; respuesta = "b"
             elif i == 8: pregunta = "Una persona con alta K probablemente ser√≠a buena en:" ; opciones = {"a": "Programaci√≥n", "b": "Dibujo t√©cnico a mano alzada", "c": "Venta al por mayor", "d": "An√°lisis estad√≠stico"} ; respuesta = "b"
             elif i == 9: pregunta = "¬øQu√© actividad combina K y Q?" ; opciones = {"a": "Ciclismo", "b": "Manejo de torno CNC", "c": "Jardiner√≠a", "d": "Pintura de murales"} ; respuesta = "b"
             elif i == 10: pregunta = "El equilibrio y la orientaci√≥n espacial en movimiento se relacionan con:" ; opciones = {"a": "Raz√≥n", "b": "Velocidad", "c": "Coordinaci√≥n", "d": "Verbal"} ; respuesta = "c"
             elif i == 11: pregunta = "En la danza, la aptitud K se refleja en la capacidad de:" ; opciones = {"a": "Recordar pasos", "b": "Ejecutar movimientos complejos con fluidez", "c": "Elegir la m√∫sica", "d": "Dise√±ar vestuario"} ; respuesta = "b"
             elif i == 12: pregunta = "La coordinaci√≥n de movimientos para alcanzar un objeto en el aire eval√∫a principalmente:" ; opciones = {"a": "Fuerza", "b": "K", "c": "G", "d": "P"} ; respuesta = "b"

        elif code == "A": # Atenci√≥n Concentrada (Concentraci√≥n en tareas mon√≥tonas/repetitivas)
            if i == 1: pregunta = "En el texto 'la casa es blanca, la casa est√° limpia, la casa tiene jard√≠n'. ¬øCu√°ntas veces aparece la palabra 'la'?" ; opciones = {"a": "2", "b": "3", "c": "4", "d": "5"} ; respuesta = "c"
            elif i == 2: pregunta = "Un test de Atenci√≥n Concentrada t√≠pico mide la capacidad de mantener la atenci√≥n durante un per√≠odo de tiempo sin caer en..." ; opciones = {"a": "El sue√±o", "b": "La fatiga", "c": "El error", "d": "La distracci√≥n"} ; respuesta = "d"
            elif i == 3: pregunta = "Identifique la secuencia que se repite en: ABCA BCAA BCAB CABA A B C A B C" ; opciones = {"a": "ABC", "b": "ABCA", "c": "BCAB", "d": "CABA"} ; respuesta = "b"
            elif i == 4: pregunta = "Si debe verificar la exactitud de 500 facturas, la aptitud A es m√°s importante que la aptitud V (Verbal)." ; opciones = {"a": "Verdadero", "b": "Falso"} ; respuesta = "a"
            elif i == 5: pregunta = "¬øCu√°l es el principal enemigo de la Atenci√≥n Concentrada?" ; opciones = {"a": "El hambre", "b": "La rutina", "c": "La falta de inter√©s en la tarea", "d": "El caf√©"} ; respuesta = "c"
            elif i == 6: pregunta = "En la serie de d√≠gitos: 847291035. Si reemplaza cada n√∫mero impar por el siguiente par, ¬øcu√°l es el nuevo n√∫mero?" ; opciones = {"a": "848202046", "b": "847291035", "c": "84820046", "d": "848202040"} ; respuesta = "a"
            elif i == 7: pregunta = "Busque la √∫nica diferencia en los dos c√≥digos: LMN-0123-PQRS y LMN-0123-PRQS" ; opciones = {"a": "LMN", "b": "0123", "c": "PQRS/PRQS", "d": "No hay diferencia"} ; respuesta = "c"
            elif i == 8: pregunta = "Una tarea que requiere rellenar formularios id√©nticos durante 8 horas al d√≠a demanda una alta aptitud de:" ; opciones = {"a": "Razonamiento General", "b": "Coordinaci√≥n Manual", "c": "Atenci√≥n Concentrada", "d": "Razonamiento Mec√°nico"} ; respuesta = "c"
            elif i == 9: pregunta = "¬øCu√°ntas 'a' min√∫sculas encuentra en esta frase, excluyendo la primera palabra?: El an√°lisis de la data actual es complejo." ; opciones = {"a": "5", "b": "6", "c": "7", "d": "8"} ; respuesta = "b"
            elif i == 10: pregunta = "Si un auditor tiene que revisar 1000 asientos contables, su capacidad para mantener la 'A' ser√° clave para evitar:" ; opciones = {"a": "Conflictos laborales", "b": "Fraudes", "c": "Errores de transcripci√≥n", "d": "Demoras"} ; respuesta = "c"
            elif i == 11: pregunta = "Marque la letra que no se repite en: R O T O R A S T R O" ; opciones = {"a": "R", "b": "O", "c": "T", "d": "S"} ; respuesta = "d"
            elif i == 12: pregunta = "El tiempo de reacci√≥n en tareas de vigilancia o monitoreo se relaciona directamente con:" ; opciones = {"a": "La fuerza f√≠sica", "b": "La capacidad de mantener A", "c": "La memoria", "d": "La imaginaci√≥n"} ; respuesta = "b"

        elif code == "M": # Razonamiento Mec√°nico (Principios f√≠sicos, m√°quinas simples)
            if i == 1: pregunta = "Si una palanca tiene el fulcro cerca de la carga, ¬øse requiere m√°s o menos fuerza para levantar la carga que si estuviera lejos?" ; opciones = {"a": "M√°s fuerza", "b": "Menos fuerza", "c": "La misma fuerza", "d": "Depende del material"} ; respuesta = "a"
            elif i == 2: pregunta = "En un sistema de engranajes donde el engranaje A mueve al B, y B mueve al C. Si A gira en sentido horario, ¬øen qu√© sentido gira C?" ; opciones = {"a": "Horario", "b": "Antihorario", "c": "Depende de la velocidad", "d": "Se detiene"} ; respuesta = "a"
            elif i == 3: pregunta = "¬øCu√°l es el principio fundamental de una bomba de agua que eleva l√≠quido?" ; opciones = {"a": "Presi√≥n positiva", "b": "Flotabilidad", "c": "Gravedad", "d": "Equilibrio est√°tico"} ; respuesta = "a"
            elif i == 4: pregunta = "Si empuja un objeto por una rampa en lugar de levantarlo verticalmente, est√° aplicando el principio de:" ; opciones = {"a": "Rueda y eje", "b": "Cu√±a", "c": "Plano inclinado", "d": "Tornillo"} ; respuesta = "c"
            elif i == 5: pregunta = "Si un circuito el√©ctrico est√° en 'serie', ¬øqu√© sucede si una bombilla se quema?" ; opciones = {"a": "Todas las dem√°s se apagan", "b": "Solo esa se apaga", "c": "Todas brillan m√°s", "d": "El voltaje aumenta"} ; respuesta = "a"
            elif i == 6: pregunta = "¬øQu√© m√°quina simple convierte un movimiento rotatorio en movimiento lineal?" ; opciones = {"a": "Palanca", "b": "Polea", "c": "Tornillo", "d": "Cu√±a"} ; respuesta = "c"
            elif i == 7: pregunta = "El centro de gravedad de un objeto es clave para su:" ; opciones = {"a": "Color", "b": "Densidad", "c": "Estabilidad", "d": "Temperatura"} ; respuesta = "c"
            elif i == 8: pregunta = "Si se calienta un gas en un recipiente cerrado, ¬øqu√© le sucede a la presi√≥n, seg√∫n la Ley de Gay-Lussac?" ; opciones = {"a": "Disminuye", "b": "Se mantiene igual", "c": "Aumenta", "d": "Se condensa"} ; respuesta = "c"
            elif i == 9: pregunta = "¬øCu√°l es el prop√≥sito principal de un fusible en un circuito el√©ctrico?" ; opciones = {"a": "Regular el voltaje", "b": "Aumentar la corriente", "c": "Proteger contra sobrecargas", "d": "Almacenar energ√≠a"} ; respuesta = "c"
            elif i == 10: pregunta = "Para reducir la fricci√≥n en un eje giratorio, se utiliza com√∫nmente:" ; opciones = {"a": "Agua", "b": "Arena", "c": "Lubricante (aceite o grasa)", "d": "Lija"} ; respuesta = "c"
            elif i == 11: pregunta = "¬øQu√© tipo de herramienta utiliza el principio del plano inclinado?" ; opciones = {"a": "Martillo", "b": "Destornillador", "c": "Hacha o cuchillo", "d": "Alicate"} ; respuesta = "c"
            elif i == 12: pregunta = "En un sistema hidr√°ulico, ¬øqu√© se transmite con mayor eficiencia?" ; opciones = {"a": "El volumen", "b": "La fuerza", "c": "La presi√≥n", "d": "El calor"} ; respuesta = "c"

        elif code == "R": # Razonamiento Abstracto (Patrones en figuras no verbales)
            if i == 1: pregunta = "Serie de figuras: Cuadrado, Tri√°ngulo, C√≠rculo, Cuadrado, Tri√°ngulo, ¬øCu√°l sigue?" ; opciones = {"a": "Cuadrado", "b": "Tri√°ngulo", "c": "C√≠rculo", "d": "Rombo"} ; respuesta = "c"
            elif i == 2: pregunta = "Un patr√≥n se basa en invertir el color de la figura anterior y rotarla 90 grados. Si la figura actual es un cuadrado negro, ¬øcu√°l ser√° la siguiente?" ; opciones = {"a": "Cuadrado negro rotado", "b": "Cuadrado blanco rotado", "c": "C√≠rculo negro", "d": "C√≠rculo blanco"} ; respuesta = "b"
            elif i == 3: pregunta = "Identifique la figura que NO sigue el patr√≥n: (A) Tres l√≠neas paralelas, (B) Tres l√≠neas que se cruzan en un punto, (C) Tres l√≠neas perpendiculares, (D) Cuatro l√≠neas paralelas." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "D"} ; respuesta = "d"
            elif i == 4: pregunta = "En una matriz 3x3, si la regla es 'El elemento de la fila 3 es la combinaci√≥n del 1 y 2'. ¬øQu√© figura falta si 1 es un c√≠rculo y 2 es una l√≠nea vertical?" ; opciones = {"a": "C√≠rculo con l√≠nea vertical", "b": "Solo la l√≠nea", "c": "Solo el c√≠rculo", "d": "L√≠nea horizontal"} ; respuesta = "a"
            elif i == 5: pregunta = "El patr√≥n es una estrella de 6 puntas que pierde una punta en cada paso. ¬øCu√°ntas puntas tendr√° despu√©s de 4 pasos?" ; opciones = {"a": "0", "b": "1", "c": "2", "d": "3"} ; respuesta = "c"
            elif i == 6: pregunta = "Si un conjunto de s√≠mbolos representa 'Clase de Aves', ¬øqu√© s√≠mbolo no pertenecer√≠a si la regla es 'tener alas'?" ; opciones = {"a": "S√≠mbolo de Buitre", "b": "S√≠mbolo de Ping√ºino", "c": "S√≠mbolo de √Åguila", "d": "S√≠mbolo de Gorri√≥n"} ; respuesta = "b"
            elif i == 7: pregunta = "Serie: un punto, dos puntos, cuatro puntos, ocho puntos, ¬øCu√°ntos puntos siguen?" ; opciones = {"a": "10", "b": "12", "c": "16", "d": "32"} ; respuesta = "c"
            elif i == 8: pregunta = "El patr√≥n muestra que la figura dentro del c√≠rculo se mueve 1 paso a la derecha. Si la figura est√° en la posici√≥n 4 (de 5), ¬ød√≥nde estar√° en 2 pasos?" ; opciones = {"a": "Posici√≥n 1", "b": "Posici√≥n 5", "c": "Posici√≥n 2", "d": "Posici√≥n 3"} ; respuesta = "a"
            elif i == 9: pregunta = "En un diagrama de Venn que representa 'Animales', 'Mam√≠feros' y 'Perros'. ¬øCu√°l es la relaci√≥n l√≥gica?" ; opciones = {"a": "Tres c√≠rculos separados", "b": "Tres c√≠rculos anidados", "c": "Dos c√≠rculos superpuestos", "d": "Un c√≠rculo grande con dos peque√±os separados"} ; respuesta = "b"
            elif i == 10: pregunta = "Si la primera figura es un √≥valo y la segunda un cuadrado, la tercera es un tri√°ngulo y la cuarta un rombo. ¬øCu√°l es el patr√≥n que rige la forma?" ; opciones = {"a": "N√∫mero de lados creciente", "b": "N√∫mero de √°ngulos", "c": "Figuras con curvas", "d": "Figuras sim√©tricas"} ; respuesta = "a"
            elif i == 11: pregunta = "Una serie de figuras aumenta el n√∫mero de lados en 1 en cada paso. Si comienza con un tri√°ngulo, ¬øqu√© figura tendr√° despu√©s de 3 pasos?" ; opciones = {"a": "Pent√°gono", "b": "Hex√°gono", "c": "Hept√°gono", "d": "Oct√°gono"} ; respuesta = "b"
            elif i == 12: pregunta = "En un conjunto de figuras, la regla es que debe ser de color s√≥lido. ¬øQu√© figura no cumple si es punteada?" ; opciones = {"a": "C√≠rculo punteado", "b": "Cuadrado s√≥lido", "c": "Tri√°ngulo s√≥lido", "d": "Rombo s√≥lido"} ; respuesta = "a"
        
        elif code == "C": # Razonamiento Clerical (Verificaci√≥n y clasificaci√≥n de datos)
            if i == 1: pregunta = "Identifique la opci√≥n que representa una clasificaci√≥n alfab√©tica correcta de los siguientes nombres: (A) Alba, Beto, Carlos, (B) Beto, Alba, Carlos, (C) Carlos, Alba, Beto." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Ninguno"} ; respuesta = "a"
            elif i == 2: pregunta = "¬øCu√°ntos errores encuentra al comparar la columna 1 con la columna 2? Columna 1: 1245-A, 8901-B, 4423-C. Columna 2: 1245-A, 8910-B, 4423-D." ; opciones = {"a": "1", "b": "2", "c": "3", "d": "0"} ; respuesta = "b"
            elif i == 3: pregunta = "Si archiva por c√≥digo num√©rico ascendente, ¬øcu√°l ir√≠a primero? (A) 00123, (B) 01001, (C) 00099, (D) 00124." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "D"} ; respuesta = "c"
            elif i == 4: pregunta = "En una lista de precios, el art√≠culo 'Aceite de Oliva Extra Virgen, 5L' debe ser clasificado en la categor√≠a 'Comestibles'." ; opciones = {"a": "Verdadero", "b": "Falso"} ; respuesta = "a"
            elif i == 5: pregunta = "En la direcci√≥n 'Av. Principal #45-12, Piso 3'. Si solo se pide el n√∫mero de apartamento, ¬øcu√°l es el dato relevante?" ; opciones = {"a": "Av. Principal", "b": "45-12", "c": "Piso 3", "d": "El n√∫mero no est√° claro"} ; respuesta = "d"
            elif i == 6: pregunta = "¬øCu√°l de las siguientes categor√≠as no es un criterio de clasificaci√≥n com√∫n en una oficina? (A) Alfab√©tico, (B) Num√©rico, (C) Crom√°tico (por color), (D) Geogr√°fico." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "D"} ; respuesta = "c"
            elif i == 7: pregunta = "Compara: $1,450.50 y 1.450,50$. ¬øSon el mismo valor num√©rico?" ; opciones = {"a": "S√≠ (diferentes notaciones)", "b": "No (son diferentes valores)", "c": "No se puede saber"} ; respuesta = "a"
            elif i == 8: pregunta = "La tarea de 'conciliar' cuentas bancarias se relaciona directamente con la aptitud de:" ; opciones = {"a": "Razonamiento Espacial", "b": "Velocidad Perceptiva/Clerical", "c": "Coordinaci√≥n Manual", "d": "Razonamiento Mec√°nico"} ; respuesta = "b"
            elif i == 9: pregunta = "Si una ficha de cliente contiene datos desactualizados, la habilidad de clerical debe llevar a:" ; opciones = {"a": "Ignorar la ficha", "b": "Actualizar los datos", "c": "Crear una nueva ficha", "d": "Consultar al gerente"} ; respuesta = "b"
            elif i == 10: pregunta = "Para la clasificaci√≥n de archivos, ¬øqu√© m√©todo es m√°s r√°pido para grandes vol√∫menes?" ; opciones = {"a": "Alfab√©tico por nombre", "b": "Num√©rico por c√≥digo", "c": "Por color de carpeta", "d": "Por peso del documento"} ; respuesta = "b"
            elif i == 11: pregunta = "¬øQu√© error es m√°s dif√≠cil de detectar en una revisi√≥n clerical r√°pida? (A) Un nombre mal escrito, (B) Un d√≠gito incorrecto en un c√≥digo largo, (C) Un espacio extra en un texto." ; opciones = {"a": "A", "b": "B", "c": "C", "d": "Todos son f√°ciles"} ; respuesta = "b"
            elif i == 12: pregunta = "Clasifique de m√°s a menos importante para la facturaci√≥n: (1) Nombre del cliente, (2) Tel√©fono del cliente, (3) Monto total." ; opciones = {"a": "1, 2, 3", "b": "3, 1, 2", "c": "2, 1, 3", "d": "1, 3, 2"} ; respuesta = "b"

        elif code == "T": # Razonamiento T√©cnico (L√≥gica de procesos, diagramas y soluci√≥n de fallas)
             if i == 1: pregunta = "En un diagrama de flujo, ¬øqu√© s√≠mbolo representa una acci√≥n o proceso espec√≠fico?" ; opciones = {"a": "Rombo", "b": "Rect√°ngulo", "c": "√ìvalo", "d": "Flecha"} ; respuesta = "b"
             elif i == 2: pregunta = "Si una m√°quina no enciende, y la luz indicadora del fusible est√° apagada, ¬øcu√°l es el paso de diagn√≥stico m√°s l√≥gico?" ; opciones = {"a": "Reemplazar la m√°quina", "b": "Revisar el cable de alimentaci√≥n", "c": "Cambiar el fusible", "d": "Llamar a soporte"} ; respuesta = "b"
             elif i == 3: pregunta = "Un manual de usuario indica que 'Si A sucede, entonces B no puede ser verdad'. Si B es verdad, ¬øqu√© conclusi√≥n se extrae?" ; opciones = {"a": "A es verdad", "b": "A no sucede", "c": "B no es relevante", "d": "La m√°quina est√° rota"} ; respuesta = "b"
             elif i == 4: pregunta = "En un proceso de ensamblaje, el paso 3 requiere que el paso 1 y 2 est√©n completos. ¬øQu√© tipo de relaci√≥n es esta?" ; opciones = {"a": "Lineal", "b": "Paralela", "c": "Jer√°rquica/Dependiente", "d": "Opcional"} ; respuesta = "c"
             elif i == 5: pregunta = "La fase final en el ciclo de soluci√≥n de problemas t√©cnicos es:" ; opciones = {"a": "Identificaci√≥n de la causa", "b": "Implementaci√≥n de la soluci√≥n", "c": "Verificaci√≥n del resultado", "d": "Recopilaci√≥n de informaci√≥n"} ; respuesta = "c"
             elif i == 6: pregunta = "¬øCu√°l es el prop√≥sito de un 'buffer' o zona de amortiguaci√≥n en una l√≠nea de producci√≥n?" ; opciones = {"a": "Aumentar la velocidad", "b": "Almacenar temporalmente producto para evitar paros", "c": "Reducir el personal", "d": "Mejorar la calidad"} ; respuesta = "b"
             elif i == 7: pregunta = "Un termostato utiliza el principio de retroalimentaci√≥n para:" ; opciones = {"a": "Medir la humedad", "b": "Ajustar la temperatura autom√°ticamente", "c": "Encender la luz", "d": "Contar ciclos"} ; respuesta = "b"
             elif i == 8: pregunta = "En la programaci√≥n de un sistema, la l√≥gica 'SI (Condici√≥n) ENTONCES (Acci√≥n)' se conoce como:" ; opciones = {"a": "Sentencia de bucle", "b": "Sentencia condicional", "c": "Declaraci√≥n de variable", "d": "Funci√≥n recursiva"} ; respuesta = "b"
             elif i == 9: pregunta = "Si un motor produce humo, ¬øqu√© paso de diagn√≥stico es el m√°s urgente?" ; opciones = {"a": "Revisar el nivel de aceite", "b": "Apagar inmediatamente la fuente de energ√≠a", "c": "Continuar operando con cuidado", "d": "A√±adir refrigerante"} ; respuesta = "b"
             elif i == 10: pregunta = "La interconexi√≥n de diferentes m√≥dulos en un sistema complejo se gestiona mejor con:" ; opciones = {"a": "Un protocolo", "b": "Un manual de estilo", "c": "Un color", "d": "Un supervisor"} ; respuesta = "a"
             elif i == 11: pregunta = "¬øCu√°l es la funci√≥n principal de un 'interruptor de l√≠mite' en una m√°quina autom√°tica?" ; opciones = {"a": "Regular la temperatura", "b": "Detener un movimiento cuando alcanza un punto espec√≠fico", "c": "Medir la presi√≥n", "d": "Indicar el tiempo de funcionamiento"} ; respuesta = "b"
             elif i == 12: pregunta = "Para un flujo de trabajo √≥ptimo, la secuencia de pasos debe ser:" ; opciones = {"a": "Aleatoria", "b": "Paralela", "c": "L√≥gica y secuencial", "d": "Independiente"} ; respuesta = "c"

        PREGUNTAS_GATB.append({
            "id": current_id, 
            "area": area,
            "code": code,
            "pregunta": pregunta, 
            "opciones": opciones, 
            "respuesta_correcta": respuesta
        })
        current_id += 1

df_preguntas = pd.DataFrame(PREGUNTAS_GATB)
N_TOTAL_PREGUNTAS = len(df_preguntas)


# --- 3. FUNCIONES DE ESTADO Y NAVEGACI√ìN ---

# Inicializaci√≥n de Session State (Agregado 'is_navigating' para el fix del doble click)
if 'stage' not in st.session_state: st.session_state.stage = 'inicio'
if 'respuestas' not in st.session_state: st.session_state.respuestas = {}
if 'area_actual_index' not in st.session_state: st.session_state.area_actual_index = 0
if 'is_navigating' not in st.session_state: st.session_state.is_navigating = False # Freno de doble clic

def set_stage(new_stage):
    """Cambia la etapa de la aplicaci√≥n, desbloquea la navegaci√≥n y fuerza el scroll."""
    st.session_state.stage = new_stage
    st.session_state.is_navigating = False # Desbloquear al cambiar de etapa
    js_scroll_to_top() # Forzar scroll AGRESIVAMENTE

def siguiente_area():
    """Avanza a la siguiente √°rea o finaliza el test, implementando el bloqueo de doble clic."""
    
    # 1. Bloquear inmediatamente para evitar la doble ejecuci√≥n
    st.session_state.is_navigating = True 
    
    # 2. Navegar
    if st.session_state.area_actual_index < len(AREAS) - 1:
        st.session_state.area_actual_index += 1
        set_stage('test_activo')
    else:
        # √öltima √°rea, calcular y mostrar resultados
        calcular_resultados()
        set_stage('resultados')

def calcular_resultados():
    """Calcula y almacena los resultados finales."""
    resultados_data = []
    
    for area in AREAS:
        preguntas_area = df_preguntas[df_preguntas['area'] == area]
        total_area = len(preguntas_area)
        aciertos_area = 0

        for index, row in preguntas_area.iterrows():
            pregunta_id = row['id']
            respuesta_usuario = st.session_state.respuestas.get(pregunta_id)
            
            if respuesta_usuario == row['respuesta_correcta']:
                aciertos_area += 1
        
        # C√°lculo de m√©tricas
        porcentaje = (aciertos_area / total_area) * 100 if total_area > 0 else 0
        percentil, clasificacion_texto = clasificar_percentil(porcentaje)
        
        resultados_data.append({
            "√Årea": area,
            "C√≥digo": APTITUDES_MAP[area]["code"],
            "Puntuaci√≥n Bruta": aciertos_area,
            "M√°xima Puntuaci√≥n": total_area,
            "Porcentaje (%)": f"{porcentaje:.1f}%",
            "Escala de Clasificaci√≥n (Percentil)": percentil,
            "Clasificaci√≥n": clasificacion_texto,
            "Color": APTITUDES_MAP[area]["color"]
        })
    
    st.session_state.resultados_df = pd.DataFrame(resultados_data)
    st.session_state.is_navigating = False # Desbloquear despu√©s de calcular


# --- 4. VISTAS DE STREAMLIT ---

def vista_inicio():
    """Muestra la p√°gina de inicio e instrucciones."""
    js_scroll_to_top() # Forzar scroll

    st.title("üß† Bater√≠a de Aptitudes Generales ‚Äì GATB Profesional")
    st.header("Evaluaci√≥n Estructurada de 12 Factores Aptitudinales")
    
    st.markdown("---")
    
    col1, col2 = st.columns([2, 1])

    with col1:
        st.info(f"""
        **üéØ Objetivo:** Medir 12 factores clave de aptitud con 144 √≠tems originales.
        
        **üìã Estructura del Test:**
        - **Total de Secciones:** **{len(AREAS)}**
        - **Preguntas por Secci√≥n:** **{N_PREGUNTAS_POR_AREA}**
        - **Total de √çtems:** **{N_TOTAL_PREGUNTAS}**
        
        **üìù Instrucciones:**
        1.  Responda cada pregunta seleccionando la opci√≥n que considere correcta.
        2.  Su respuesta se guarda autom√°ticamente al seleccionar.
        3.  Use el bot√≥n "Siguiente Secci√≥n" para avanzar. **El scroll se forzar√° al inicio al cambiar de secci√≥n.**
        """)
    
    with col2:
        st.subheader("Simulaci√≥n Profesional")
        st.warning("‚ö†Ô∏è **Nota:** Esta es una simulaci√≥n. Las clasificaciones (Percentil) son **ilustrativas** y la aptitud se eval√∫a con preguntas originales creadas para representar el tipo de tarea.")
        
        if st.button("üöÄ Iniciar Evaluaci√≥n", type="primary", use_container_width=True, disabled=st.session_state.is_navigating):
            st.session_state.area_actual_index = 0
            set_stage('test_activo')

    st.markdown("---")
    st.subheader("Resumen de √Åreas de Aptitud")
    
    cols = st.columns(3)
    for i, area in enumerate(AREAS):
        col = cols[i % 3]
        col.markdown(f"**{APTITUDES_MAP[area]['code']} - {area}**")

def vista_test_activo():
    """Muestra la secci√≥n de preguntas del √°rea actual."""
    js_scroll_to_top() # Forzar scroll al cargar la vista

    area_actual = AREAS[st.session_state.area_actual_index]
    total_areas = len(AREAS)
    current_area_index = st.session_state.area_actual_index
    progress_percentage = (current_area_index + 1) / total_areas

    # --- Cabecera y Barra de Progreso ---
    st.title(f"Secci√≥n {current_area_index + 1} de {total_areas}: {area_actual}")
    st.progress(progress_percentage, text=f"Progreso General: **{area_actual}** ({APTITUDES_MAP[area_actual]['code']})")
    st.markdown("---")
    
    preguntas_area = df_preguntas[df_preguntas['area'] == area_actual]
    
    with st.container(border=True):
        st.subheader(f"Tarea: Responda a los {N_PREGUNTAS_POR_AREA} √≠tems de {area_actual}")
        
        q_num = 1 # Contador local para la pregunta dentro de la secci√≥n
        for index, row in preguntas_area.iterrows():
            pregunta_id = row['id']
            opciones_radio = [f"{k}) {v}" for k, v in row['opciones'].items()]
            
            # Recuperar la respuesta anterior
            default_value_key = st.session_state.respuestas.get(pregunta_id)
            try:
                keys_list = list(row['opciones'].keys())
                default_index = keys_list.index(default_value_key)
            except (ValueError, AttributeError):
                default_index = None

            with st.container(border=True):
                st.markdown(f"**Pregunta {q_num}.**") 
                st.markdown(row['pregunta']) # Pregunta con texto descriptivo
                
                # Callback para guardar la respuesta inmediatamente al seleccionar
                def on_radio_change(q_id):
                    selected_option_full = st.session_state[f'q_{q_id}']
                    selected_key = selected_option_full.split(')')[0]
                    st.session_state.respuestas[q_id] = selected_key
                
                st.radio(
                    f"Respuesta {row['code']}-{q_num}:", 
                    opciones_radio, 
                    key=f'q_{pregunta_id}', 
                    index=default_index,
                    on_change=on_radio_change,
                    args=(pregunta_id,)
                )
            
            q_num += 1
    
    st.markdown("---")

    if st.session_state.area_actual_index < len(AREAS) - 1:
        next_area_name = AREAS[st.session_state.area_actual_index + 1]
        submit_label = f"‚û°Ô∏è Siguiente Secci√≥n: {next_area_name}"
    else:
        submit_label = "‚úÖ Finalizar Test y Generar Informe"

    st.button(
        submit_label, 
        type="primary", 
        on_click=siguiente_area, 
        use_container_width=True,
        disabled=st.session_state.is_navigating # Control de doble click
    )

def vista_resultados():
    """Muestra el informe de resultados profesional con calificaci√≥n global, escala de nota y detalles extendidos."""
    js_scroll_to_top() # Forzar scroll al cargar resultados

    st.title("üìÑ Informe de Resultados GATB Profesional")
    st.header("Perfil Aptitudinal Detallado")
    
    df_resultados = st.session_state.resultados_df

    st.markdown("---")
    
    # --- 1. Calificaci√≥n Global ---
    df_resultados['Percentil Num'] = df_resultados['Escala de Clasificaci√≥n (Percentil)'].astype(int)
    avg_percentil = df_resultados['Percentil Num'].mean()
    
    calificacion, detalle_calificacion, color_calificacion = calificar_global(avg_percentil)

    st.subheader("üìä Calificaci√≥n Global del Perfil")
    
    st.markdown(f"""
    <div style="background-color: {color_calificacion}; padding: 25px; border-radius: 15px; color: white; margin-bottom: 20px; text-align: center; box-shadow: 0 6px 10px rgba(0,0,0,0.2);">
        <h2 style="margin: 0; font-size: 2em;">{calificacion}</h2>
        <p style="margin: 5px 0 10px 0; font-size: 1.1em; font-weight: 500;">Percentil Promedio Global: {avg_percentil:.1f}</p>
        <p style="font-size: 0.9em; margin: 0; border-top: 1px solid rgba(255,255,255,0.3); padding-top: 10px;">{detalle_calificacion}</p>
    </div>
    """, unsafe_allow_html=True)
    
    # --- 2. Escala de Clasificaci√≥n (Nota) ---
    st.subheader("üìà Escala de Clasificaci√≥n (Percentiles)")
    st.info("La puntuaci√≥n de Percentil indica qu√© porcentaje de la poblaci√≥n obtuvo una puntuaci√≥n igual o menor a la suya. Un 90% es excelente.")
    
    escala_data = {
        "Clasificaci√≥n": ["Superior", "Alto", "Promedio Alto", "Promedio", "Promedio Bajo", "Bajo", "Muy Bajo"],
        "Rango Percentil (Simulado)": ["90-99", "80-89", "60-79", "40-59", "20-39", "10-19", "0-9"]
    }
    df_escala = pd.DataFrame(escala_data)
    
    st.table(df_escala)

    st.markdown("---")
    
    # --- 3. Tabla de Resultados Detallada ---
    st.subheader("Puntuaciones Detalladas por Aptitud")
    
    # Estilos de celda para la clasificaci√≥n
    def highlight_classification(s):
        if 'Superior' in s['Clasificaci√≥n'] or 'Alto' in s['Clasificaci√≥n']:
            return ['background-color: #d4edda'] * len(s) # Verde claro
        elif 'Bajo' in s['Clasificaci√≥n']:
            return ['background-color: #f8d7da'] * len(s) # Rojo claro
        else:
            return [''] * len(s)

    df_display = df_resultados.copy()
    df_display = df_display[['C√≥digo', '√Årea', 'Puntuaci√≥n Bruta', 'Porcentaje (%)', 'Escala de Clasificaci√≥n (Percentil)', 'Clasificaci√≥n']]
    
    st.dataframe(
        df_display.style.apply(highlight_classification, axis=1),
        use_container_width=True,
        hide_index=True,
        column_config={
            "Puntuaci√≥n Bruta": st.column_config.NumberColumn("Puntaje Bruto", format="%d"),
            "Escala de Clasificaci√≥n (Percentil)": st.column_config.Progress(
                "Percentil",
                format="%d",
                min_value=0,
                max_value=100,
                width='small'
            )
        }
    )
    
    st.markdown("---")
    
    # --- 4. Interpretaci√≥n Profesional Detallada ---
    st.subheader("Informe Profesional e Interpretaci√≥n")
    
    # Reutilizando la funci√≥n de interpretaci√≥n para el formato profesional
    def generar_interpretacion_profesional(row):
        percentil = row['Percentil Num']
        area_code = row['C√≥digo']
        area_name = row['√Årea']
        clasificacion = row['Clasificaci√≥n']

        interpretacion_base = {
            "G": "Capacidad para percibir y comprender relaciones, aprender y emitir juicios l√≥gicos. El factor 'g' de la inteligencia, clave para el √©xito en cualquier campo.",
            "V": "Habilidad para entender ideas expresadas en palabras, dominar vocabulario y redactar informes. Esencial para la comunicaci√≥n eficaz y la comprensi√≥n de instrucciones.",
            "N": "Rapidez y precisi√≥n para trabajar con n√∫meros, realizar c√°lculos y resolver problemas matem√°ticos. Crucial en an√°lisis de datos, finanzas y contabilidad.",
            "S": "Habilidad para percibir formas en dos o tres dimensiones, rotar objetos mentalmente y visualizar dise√±os. Importante en dise√±o, ingenier√≠a, arquitectura y mec√°nica.",
            "P": "Rapidez para ver detalles en un objeto o tabla, realizar comparaciones y detectar peque√±as diferencias. Fundamental para el control de calidad y roles de auditor√≠a.",
            "Q": "Destreza y coordinaci√≥n fina de los dedos y las manos, necesaria para ensamblar piezas peque√±as o manipular instrumentos delicados. T√≠pica de la cirug√≠a o la relojer√≠a.",
            "K": "Habilidad para coordinar movimientos oculares y manuales, controlando la mano con precisi√≥n en movimientos amplios. Importante en oficios, conducci√≥n y mecanograf√≠a.",
            "A": "Capacidad de mantener la atenci√≥n en una tarea mon√≥tona o repetitiva durante per√≠odos prolongados, minimizando errores. Clave en roles de auditor√≠a o ingreso de datos masivos.",
            "M": "Comprensi√≥n de principios f√≠sicos b√°sicos, m√°quinas simples, fuerzas y movimiento. Esencial para t√©cnicos, mec√°nicos y operarios de maquinaria pesada.",
            "R": "Capacidad para descubrir patrones y relaciones en figuras no verbales o simb√≥licas, crucial para la l√≥gica pura, la resoluci√≥n de problemas abstractos y la programaci√≥n.",
            "C": "Rapidez y precisi√≥n para observar detalles verbales y num√©ricos, como en la clasificaci√≥n, archivo y verificaci√≥n de documentos. T√≠pico de roles administrativos y de oficina.",
            "T": "Aplicaci√≥n de la l√≥gica y principios para identificar fallas, dise√±ar soluciones o seguir procesos t√©cnicos complejos. Combina G, S, y M en un contexto de soluci√≥n de problemas.",
        }

        detalle = interpretacion_base.get(area_code, "Mide una habilidad cognitiva o motriz espec√≠fica.")

        # Definir estilo basado en la clasificaci√≥n
        if "Superior" in clasificacion: color_bg = "#d4edda"; color_text = "#155724"
        elif "Alto" in clasificacion: color_bg = "#cce5ff"; color_text = "#004085"
        elif "Promedio" in clasificacion: color_bg = "#fff3cd"; color_text = "#856404"
        else: color_bg = "#f8d7da"; color_text = "#721c24"

        return f"""
            <div style="background-color: {color_bg}; padding: 15px; border-radius: 8px; color: {color_text}; margin-bottom: 10px; border-left: 5px solid {color_text};">
                <h5 style="margin-top: 0; color: {color_text}; font-weight: bold;">{area_name} ({area_code}) - Clasificaci√≥n: {clasificacion}</h5>
                <p style="font-size: 0.9em; margin-bottom: 5px;">**Percentil:** {percentil}</p>
                <p style="font-size: 0.9em; margin-bottom: 0;">**Descripci√≥n:** {detalle}</p>
            </div>
        """
        
    for index, row in df_resultados.sort_values(by='Percentil Num', ascending=False).iterrows():
        st.markdown(generar_interpretacion_profesional(row), unsafe_allow_html=True)
        
    st.markdown("---")

    if st.button("‚è™ Realizar Nueva Evaluaci√≥n", type="secondary"):
        st.session_state.respuestas = {}
        st.session_state.area_actual_index = 0
        set_stage('inicio')


# --- 5. CONTROL DEL FLUJO PRINCIPAL ---

if st.session_state.stage == 'inicio':
    vista_inicio()
elif st.session_state.stage == 'test_activo':
    vista_test_activo()
elif st.session_state.stage == 'resultados':
    vista_resultados()

# --- 6. FOOTER Y ACERCA DE ---
st.markdown("---")
st.markdown("<p style='text-align: center; font-size: small; color: grey;'>Desarrollado para simular la estructura del GATB (General Aptitude Test Battery). Las puntuaciones son ilustrativas y no deben usarse para toma de decisiones sin un profesional cualificado.</p>", unsafe_allow_html=True)
